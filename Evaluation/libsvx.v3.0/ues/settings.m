% This script is used to set various paths and paramters. See README for
% URLs to download the solver and external packages.
root = pwd;
addpath(fullfile(root,'code'));

%% IBM ILOG CPLEX MIQP Solver Path and Parameters
% The following paths are generated by the default IBM ILOG CPLEX Studio 
% installation. Feel free to change it to your manual installation path.
% Note that other open-source MIQP solvers are possible. We took the IBM
% CPLEX since it was free of charge for academic use at the time we
% developed the algorithm.

% ---- uncomment the next line in Ubuntu ----
% addpath('/opt/ibm/ILOG/CPLEX_Studio124/cplex/matlab');
% ---- uncomment the next line in Mac OSX ----
addpath('~/Applications/IBM/ILOG/CPLEX_Studio124/cplex/matlab');

opt = cplexoptimset; % cplex options
opt.MaxTime = 180; % maximum time (sec) of cplex solver

%% Feature Criteria.
%% Optical Flow Code Path and Quantization Parameters (optional).
flow_code = fullfile(root,'external','OpticalFlow');
mag_num = 4; % number of flow magnitude bins, default 4
ang_num = 8; % number of flow angular bins, default 8

%% Objectness Code Path and Quantization Parameters (optional).
objectness_code = fullfile(root,'external','objectness-release-v1.5');
win_num = 1000; % objectness, number of windows sampled per image
obj_num = 6; % number of objectness quantization bins

%% DPM Detection Paths and Quantization Parameters (optional).
detection_code = fullfile(root,'external','voc-release4.01');
% Choose your desired detection model.
model_name = fullfile('VOC2009','person_final.mat');
model_thresh = -1.5; % set a low detection threshold
det_num = 6; % number of detection quantization bins

%% Paths
paths.root = root;
paths.flow_code = flow_code;
paths.objectness_code = objectness_code;
paths.detection_code = detection_code;
